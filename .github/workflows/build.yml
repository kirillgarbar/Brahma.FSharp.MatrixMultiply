name: Build master

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Use .NET Core 2.1 SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '2.1.x'
    - name: Use .NET Core 3.1 SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    # Not specifying a version will attempt to install via global.json
    - name: Use .NET Core global.json
      uses: actions/setup-dotnet@v1

    - name: Build
      if: runner.os != 'Windows'
      run: |
        chmod +x ./.github/workflows/install-ubuntu-dependencies.sh
        sudo ./.github/workflows/install-ubuntu-dependencies.sh

        sudo apt install clinfo

        clinfo

        chmod +x ./build.sh
        ./build.sh
      env:
        # Work around https://github.com/actions/setup-dotnet/issues/29
        DOTNET_ROOT: ${{ runner.tool_cache }}/dncs/${{ matrix.dotnet }}/x64
        CI: true
    - name: Build
      if: runner.os == 'Windows'
      run: |
        set NUGETDIR=C:\NUGET
        nuget install opencl-nug -Version 0.777.77 -OutputDirectory %NUGETDIR%
        dir %NUGETDIR%\opencl-nug.0.777.77\build\native\
        set OCL_ROOT=%NUGETDIR%\opencl-nug.0.777.77\build\native
        # Install OpenCL Runtime
        choco install opencl-intel-cpu-runtime
           
        ./build.cmd
      env:
        # Work around https://github.com/actions/setup-dotnet/issues/29
        DOTNET_ROOT: ${{ runner.tool_cache }}/dncs/${{ matrix.dotnet }}/x64
        CI: true
